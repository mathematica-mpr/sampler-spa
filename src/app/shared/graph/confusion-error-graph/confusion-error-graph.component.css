.confusion-error-matrix {
    flex: 1 100%;
    display: grid;
    max-height: 100%;
    width: 95vw;
    max-width: 900px;
    grid-template-areas:
        '. headerPlus headerMinus . .'
        'rowPlus tp fp ppv fdr '
        'rowMinus fn  tn for npv'
        '. sens fpr legend legend'
        '. fnr spec legend legend';
    grid-column-gap: 1%;
    grid-row-gap: 1%;
    grid-template-columns: 1fr repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
}

.cell {
    border: 1px solid;
    display: grid;
    align-items: flex-end;
}

p {
    margin: 0%;
    font-size: 60%;
}

h3 {
    font-size: 110%;
}

.legend {
    display: none;
}

.legend.active {
    display: inline;
}

.cell {
    padding: 2px;
}

.table-header {
    display: grid;
    justify-content: center;
    align-content: center;
    justify-content: center;
    text-align: center;
    text-shadow: 0 0 0;
}

.column#plus {
    grid-area: headerPlus;
}
.column#minus {
    grid-area: headerMinus;
}
.row#plus {
    grid-area: rowPlus;
}
.row#minus {
    grid-area: rowMinus;
}

.TruePos {
    grid-area: tp;
}

.FalPos {
    grid-area: fp;
}

.FalNeg {
    grid-area: fn;
}

.TrueNeg {
    grid-area: tn;
}

.Fpr {
    grid-area: fpr;
}

.Fnr {
    grid-area: fnr;
}

.Fdr {
    grid-area: fdr;
}

.For {
    grid-area: for;
}
.PPV {
    grid-area: ppv;
}
.NPV {
    grid-area: npv;
}

.Sens {
    grid-area: sens;
}

.Spec {
    grid-area: spec;
}

.legend {
    grid-area: legend;
}
